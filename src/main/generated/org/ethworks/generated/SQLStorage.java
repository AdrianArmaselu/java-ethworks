package org.ethworks.generated;

import java.io.IOException;
import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.protocol.exceptions.TransactionException;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version null.
 */
public class SQLStorage extends Contract {
    private static final String BINARY = "";

    protected SQLStorage(String contractAddress, Web3j web3j, Credentials accountCredentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, accountCredentials, gasPrice, gasLimit);
        try {
                    this.contractAddress = send(null, BINARY, BigInteger.ZERO, gasPrice, gasLimit).getContractAddress();
                } catch (IOException | TransactionException e) {
                    e.printStackTrace();
                }
    }

    protected SQLStorage(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
        try {
                    this.contractAddress = send(null, BINARY, BigInteger.ZERO, gasPrice, gasLimit).getContractAddress();
                } catch (IOException | TransactionException e) {
                    e.printStackTrace();
                }
    }

    public RemoteCall<String> getTableName(BigInteger tableIndex) {
        Function function = new Function("getTableName", 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(tableIndex)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<String> getSelect(String tableName, BigInteger numberOfColumns, BigInteger startRow, BigInteger endRow, String columns) {
        Function function = new Function("getSelect", 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(tableName), 
                new org.web3j.abi.datatypes.generated.Uint256(numberOfColumns), 
                new org.web3j.abi.datatypes.generated.Uint256(startRow), 
                new org.web3j.abi.datatypes.generated.Uint256(endRow), 
                new org.web3j.abi.datatypes.Utf8String(columns)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<TransactionReceipt> insert(String tableName, BigInteger numberOfColumns, String columns, String values) {
        Function function = new Function(
                "insert", 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(tableName), 
                new org.web3j.abi.datatypes.generated.Uint256(numberOfColumns), 
                new org.web3j.abi.datatypes.Utf8String(columns), 
                new org.web3j.abi.datatypes.Utf8String(values)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<BigInteger> getRowCount(String tableName) {
        Function function = new Function("getRowCount", 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(tableName)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<String> getColumnName(String tableName, BigInteger columnIndex) {
        Function function = new Function("getColumnName", 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(tableName), 
                new org.web3j.abi.datatypes.generated.Uint256(columnIndex)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<String> getValue(String tableName, String column, BigInteger rowNumber) {
        Function function = new Function("getValue", 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(tableName), 
                new org.web3j.abi.datatypes.Utf8String(column), 
                new org.web3j.abi.datatypes.generated.Uint256(rowNumber)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<Boolean> getTableExists() {
        Function function = new Function("getTableExists", 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteCall<TransactionReceipt> update(String tableName, BigInteger numberOfColumns, BigInteger rowIndex, String columns, String values) {
        Function function = new Function(
                "update", 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(tableName), 
                new org.web3j.abi.datatypes.generated.Uint256(numberOfColumns), 
                new org.web3j.abi.datatypes.generated.Uint256(rowIndex), 
                new org.web3j.abi.datatypes.Utf8String(columns), 
                new org.web3j.abi.datatypes.Utf8String(values)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<BigInteger> getTableNumberCounter() {
        Function function = new Function("getTableNumberCounter", 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<TransactionReceipt> createTable(String tableName, String columns) {
        Function function = new Function(
                "createTable", 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(tableName), 
                new org.web3j.abi.datatypes.Utf8String(columns)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public static RemoteCall<SQLStorage> deploy(Web3j web3j, Credentials accountCredentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(SQLStorage.class, web3j, accountCredentials, gasPrice, gasLimit, BINARY, "");
    }

    public static RemoteCall<SQLStorage> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(SQLStorage.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }

    public static SQLStorage load(String contractAddress, Web3j web3j, Credentials accountCredentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new SQLStorage(contractAddress, web3j, accountCredentials, gasPrice, gasLimit);
    }

    public static SQLStorage load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new SQLStorage(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }
}
