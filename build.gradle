group 'java-ethworks'
version '1.0'
apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'idea'

sourceCompatibility = 1.8
mainClassName = 'org.ethworks.CommandLine'

ext {
    // put project variables here
}

repositories {
    mavenCentral()
    maven {
        url "https://dl.bintray.com/ethereum/maven/"
    }
}

sourceSets {
    main {
        java{
            srcDirs =['src/main/java', 'src/main/generated']
        }
    }
}

dependencies {

    // ethereum core
    compile group: 'org.ethereum', name: 'ethereumj-core', version: '1.6.0-RELEASE'
    compile group: 'org.ethereum', name: 'solcJ-all', version: '0.4.19'
    compile group: 'org.ethereum', name: 'leveldbjni-all', version: '1.18.3'

    //web3j
    compile group: 'org.web3j', name: 'core', version: '3.2.0'
    compile group: 'org.web3j', name: 'utils', version: '3.2.0'
    compile group: 'org.web3j', name: 'codegen', version: '3.2.0'
    compile group: 'org.web3j', name: 'geth', version: '3.2.0'
    compile group: 'org.web3j', name: 'web3j-spring-boot-starter', version: '1.5.0'

    //utilities
    compile group: 'commons-io', name: 'commons-io', version: '2.5'
    compile group: 'org.apache.commons', name: 'commons-collections4', version: '4.1'
    compile group: 'org.zeroturnaround', name: 'zt-exec', version: '1.10'
    compile group: 'com.typesafe', name: 'config', version: '1.3.2'
    compile group: 'com.beust', name: 'jcommander', version: '1.72'

    //docker
    compile group: 'com.spotify', name: 'docker-client', version: '8.11.1'

    //testing
    testCompile group: 'org.testng', name: 'testng', version: '6.14.2'
    testCompile group: 'junit', name: 'junit', version: '4.12'

}

jar {
    manifest {
        attributes 'Main-Class': 'org.ethworks.CommandLine'
    }
}


clean.doFirst {
    delete "src/main/generated/"
}
